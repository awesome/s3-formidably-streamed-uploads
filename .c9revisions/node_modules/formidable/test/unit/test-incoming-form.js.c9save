{"ts":1356028470217,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var common       = require('../common');\nvar test         = require('utest');\nvar assert       = common.assert;\nvar IncomingForm = common.require('incoming_form').IncomingForm;\nvar path         = require('path');\n\nvar form;\ntest('IncomingForm', {\n  before: function() {\n    form = new IncomingForm();\n  },\n\n  '#_fileName with regular characters': function() {\n    var filename = 'foo.txt';\n    assert.equal(form._fileName(makeHeader(filename)), 'foo.txt');\n  },\n\n  '#_fileName with unescaped quote': function() {\n    var filename = 'my\".txt';\n    assert.equal(form._fileName(makeHeader(filename)), 'my\".txt');\n  },\n\n  '#_fileName with escaped quote': function() {\n    var filename = 'my%22.txt';\n    assert.equal(form._fileName(makeHeader(filename)), 'my\".txt');\n  },\n\n  '#_fileName with bad quote and additional sub-header': function() {\n    var filename = 'my\".txt';\n    var header = makeHeader(filename) + '; foo=\"bar\"';\n    assert.equal(form._fileName(header), filename);\n  },\n\n  '#_fileName with semicolon': function() {\n    var filename = 'my;.txt';\n    assert.equal(form._fileName(makeHeader(filename)), 'my;.txt');\n  },\n\n  '#_fileName with utf8 character': function() {\n    var filename = 'my&#9731;.txt';\n    assert.equal(form._fileName(makeHeader(filename)), 'myâ˜ƒ.txt');\n  },\n\n  '#_uploadPath strips harmful characters from extension when keepExtensions': function() {\n    form.keepExtensions = true;\n\n    var ext = path.extname(form._uploadPath('fine.jpg?foo=bar'));\n    assert.equal(ext, '.jpg');\n\n    var ext = path.extname(form._uploadPath('fine?foo=bar'));\n    assert.equal(ext, '');\n\n    var ext = path.extname(form._uploadPath('super.cr2+dsad'));\n    assert.equal(ext, '.cr2');\n\n    var ext = path.extname(form._uploadPath('super.bar'));\n    assert.equal(ext, '.bar');\n  },\n});\n\nfunction makeHeader(filename) {\n  return 'Content-Disposition: form-data; name=\"upload\"; filename=\"' + filename + '\"';\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":1917}]],"length":1917}
