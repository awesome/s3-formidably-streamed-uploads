{"ts":1356028643456,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1356028742226,"patch":[[{"diffs":[[1,"fs = require 'fs'\nhttp = require 'http'\nnet = require 'net'\nshould = require 'should'\n\nserver = http.createServer()"]],"start1":0,"start2":0,"length1":0,"length2":115}]],"length":115,"saved":false}
{"ts":1356029012618,"patch":[[{"diffs":[[0,"'should'"],[1,"\ns3auth = require './auth.json'"],[0,"\n\nserver"]],"start1":77,"start2":77,"length1":16,"length2":47}]],"length":146,"saved":false}
{"ts":1356029057136,"patch":[[{"diffs":[[0,"uire './"],[1,"s3"],[0,"auth.jso"]],"start1":98,"start2":98,"length1":16,"length2":18}]],"length":148,"saved":false}
{"ts":1356029513291,"patch":[[{"diffs":[[0,"Server()"],[1,"\n\ndescribe 'Formidable / knox multipart form uploads', ->\n\n    var client = null;\n    \n    before(function(done) {\n        try {\n            var auth = require('./auth.json');\n            client = knox.createClient(auth);\n            done();\n        } catch (err) {\n            done('Could not create Knox client - please provide an ./auth.json file');\n        }\n    });\n    \n    it('should be able to pipe a stream directly to Amazon S3 using the multi part upload', function(done) {\n"]],"start1":140,"start2":140,"length1":8,"length2":493}]],"length":633,"saved":false}
{"contributors":[],"silentsave":false,"ts":1356029618201,"patch":[[{"diffs":[[0," ->\n"],[-1,"\n"],[0,"    "],[-1,"var "],[0,"clie"]],"start1":202,"start2":202,"length1":17,"length2":12}]],"length":628,"saved":false}
{"ts":1356029810650,"patch":[[{"diffs":[[0,"ds', ->\n"],[-1,"  "],[0,"  client"]],"start1":198,"start2":198,"length1":18,"length2":16},{"diffs":[[0,"   \n"],[-1,"  "],[0,"  before"],[-1,"(function"],[1," "],[0,"(done) "],[-1,"{\n  "],[1,"->\n"],[0,"    "],[-1,"  "],[0,"try "],[-1,"{"],[0,"\n"],[-1,"            var auth = require('./auth.json');\n      "],[0,"    "]],"start1":224,"start2":224,"length1":103,"length2":36},{"diffs":[[0,"ient"],[-1,"("],[1," s3"],[0,"auth"],[-1,");\n   "],[1,"\n"],[0,"      "],[-1,"   "],[0,"done()"],[-1,";\n "],[1,"\n"],[0,"   "],[-1,"    }"],[0," catch "],[-1,"("],[0,"err"],[-1,") {\n  "],[1,"\n"],[0,"      "],[-1,"    "],[0,"done"],[-1,"("],[1," "],[0,"'Cou"]],"start1":284,"start2":284,"length1":77,"length2":54},{"diffs":[[0,"de an ./"],[1,"s3"],[0,"auth.jso"]],"start1":378,"start2":378,"length1":16,"length2":18},{"diffs":[[0,"ile'"],[-1,");\n        }\n    });\n    "],[0,"\n  "],[1,"  \n"],[0,"  it"],[-1,"("],[1," "],[0,"'sho"]],"start1":399,"start2":399,"length1":41,"length2":19},{"diffs":[[0,"d', "],[-1,"function(done) {"],[1,"(done) ->\n    "],[0,"\n"]],"start1":495,"start2":495,"length1":21,"length2":19}]],"length":514,"saved":false}
{"ts":1356029921299,"patch":[[{"diffs":[[0,"th.json'"],[1,"\nmockstream = require 'mockstream'"],[0,"\n\nserver"]],"start1":110,"start2":110,"length1":16,"length2":50}]],"length":548,"saved":false}
{"ts":1356030085186,"patch":[[{"diffs":[[0,"e 'net'\n"],[1,"knox = require 'knox'\nMultiPartUpload = require 'knox-mpu'\n"],[0,"should ="]],"start1":52,"start2":52,"length1":16,"length2":75}]],"length":607,"saved":false}
{"ts":1356030294204,"patch":[[{"diffs":[[0,"one) ->\n    "],[1,"testLength = 7242880\n    chunkSize = 2048\n    stream = new mockstream.MockDataStream \n      chunkSize: chunkSize\n      streamLength: testLength\n      opts =\n        client: client\n        objectName: Date.now() + '.txt'\n        stream: stream\n      mpu = null\n            \n        // Upload the file\n        mpu = new MultiPartUpload(opts, function(err, body) {\n            if (err) return done(err);\n            assert.equal(body['Key'], opts.objectName);\n            \n            // Clean up after ourselves\n            client.deleteFile(opts.objectName, function(err, res) {\n                if (err) return done('Could not delete file [' + err + ']');\n                return done();\n            });\n            \n        }); \n           \n        stream.start(); "],[0,"\n"]],"start1":594,"start2":594,"length1":13,"length2":777}]],"length":1371,"saved":false}
{"ts":1356030613760,"patch":[[{"diffs":[[0,"    "],[-1,"  "],[0,"opts =\n"],[-1,"  "],[0,"    "]],"start1":750,"start2":750,"length1":19,"length2":15},{"diffs":[[0,"t\n      "],[-1,"  "],[0,"objectNa"]],"start1":780,"start2":780,"length1":18,"length2":16},{"diffs":[[0,".txt'\n      "],[-1,"  "],[0,"stream: stre"]],"start1":814,"start2":814,"length1":26,"length2":24},{"diffs":[[0," stream\n"],[-1,"  "],[0,"    mpu "]],"start1":833,"start2":833,"length1":18,"length2":16},{"diffs":[[0,"   \n    "],[-1,"    //"],[1,"#"],[0," Upload "]],"start1":865,"start2":865,"length1":22,"length2":17},{"diffs":[[0,"ile\n    "],[-1,"    "],[0,"mpu = ne"]],"start1":887,"start2":887,"length1":20,"length2":16},{"diffs":[[0,"load"],[-1,"("],[1," "],[0,"opts, "],[-1,"function"],[0,"(err"]],"start1":916,"start2":916,"length1":23,"length2":15},{"diffs":[[0,", body) "],[-1,"{\n      "],[1,"->\n"],[0,"      if"]],"start1":931,"start2":931,"length1":24,"length2":19},{"diffs":[[0," if "],[-1,"("],[0,"err"],[-1,") retur"],[1,"? the"],[0,"n done"],[-1,"(err);\n"],[1," err\n  "],[0,"    "],[1,"else\n"],[0,"        "],[-1,"assert.equal(body['Key'],"],[1,"body['Key'].should.be.equal"],[0," opt"]],"start1":947,"start2":947,"length1":69,"length2":73},{"diffs":[[0,"jectName"],[-1,");"],[0,"\n       "]],"start1":1024,"start2":1024,"length1":18,"length2":16},{"diffs":[[0,"    "],[-1,"    //"],[1,"#"],[0," Cle"]],"start1":1050,"start2":1050,"length1":14,"length2":9},{"diffs":[[0,"        "],[-1,"    "],[0,"client.d"]],"start1":1081,"start2":1081,"length1":20,"length2":16},{"diffs":[[0," res) {\n"],[-1,"      "],[0,"        "]],"start1":1137,"start2":1137,"length1":22,"length2":16},{"diffs":[[0,"        "],[-1,"      "],[0,"return d"]],"start1":1218,"start2":1218,"length1":22,"length2":16},{"diffs":[[0,"();\n"],[-1,"            });\n            \n        }); \n"],[0,"    "]],"start1":1237,"start2":1237,"length1":50,"length2":8}]],"length":1278,"saved":false}
{"ts":1356030800916,"patch":[[{"diffs":[[0,"leteFile"],[-1,"("],[1," "],[0,"opts.obj"]],"start1":1098,"start2":1098,"length1":17,"length2":17},{"diffs":[[0,"me, "],[-1,"function"],[0,"(err"]],"start1":1120,"start2":1120,"length1":16,"length2":8},{"diffs":[[0,"es) "],[-1,"{"],[1,"->"],[0,"\n   "]],"start1":1131,"start2":1131,"length1":9,"length2":10},{"diffs":[[0," if "],[-1,"("],[0,"err"],[-1,") retur"],[1,"? the"],[0,"n done"],[-1,"('"],[1," \""],[0,"Coul"]],"start1":1147,"start2":1147,"length1":27,"length2":24},{"diffs":[[0,"le ["],[-1,"' + err + ']');"],[1,"#{err}]\""],[0,"\n   "]],"start1":1186,"start2":1186,"length1":23,"length2":16},{"diffs":[[0,"    "],[-1,"return"],[1,"else"],[0," done()"],[-1,";"],[0,"\n   "]],"start1":1205,"start2":1205,"length1":22,"length2":19},{"diffs":[[0,"   \n    "],[-1,"   "],[-1," "],[0,"stream.s"]],"start1":1229,"start2":1229,"length1":20,"length2":16},{"diffs":[[0,"rt()"],[-1,"; "],[0,"\n"]],"start1":1247,"start2":1247,"length1":7,"length2":5}]],"length":1252,"saved":false}
