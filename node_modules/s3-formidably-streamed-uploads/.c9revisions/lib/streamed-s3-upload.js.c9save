{"ts":1356121605565,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"// Generated by CoffeeScript 1.4.0\n(function() {\n  var MultiPartUpload, async, formidable, knox, util;\n\n  async = require('async');\n\n  formidable = require('formidable');\n\n  knox = require('knox');\n\n  MultiPartUpload = require('knox-mpu');\n\n  util = require('util');\n\n  module.exports = function(options) {\n    var handleFilePart, handleFileUpload, processPart, pushToS3;\n    processPart = options.processPart || function(readStream, done) {\n      return done(null, [part]);\n    };\n    pushToS3 = function(readStream, cb) {\n      var mpu;\n      console.time(\"[ image-uploader-helper ] Pushing to S3\");\n      return mpu = new MultiPartUpload({\n        client: global.knoxClient,\n        objectName: readStream.filename,\n        stream: readStream\n      }, cb);\n    };\n    handleFilePart = function(readStream, cb) {\n      return processPart(readStream, function(err, readStreams) {\n        return async.map(readStreams, pushToS3, cb);\n      });\n      /*\n          async.forEach thumbnailSizes,\n            (size, cb) ->\n              saveThumbnail part, size, cb\n            (err) ->\n              cb err\n      */\n\n    };\n    handleFileUpload = function(req, done) {\n      var form;\n      form = new formidable.IncomingForm();\n      form.keepExtensions = true;\n      form.uploadDir = process.env.TMP || process.env.TMPDIR || process.env.TEMP || '/tmp' || process.cwd();\n      form.on('s3-upload-completed', function(s3res) {\n        return done(null, s3res);\n      });\n      form.on('error', function(err) {\n        return done(err, null);\n      });\n      form.onPart = function(part) {\n        console.log('**onPart');\n        if (!part.filename) {\n          return form.handlePart(part);\n        } else {\n          return handleFilePart(part, function(err, s3res) {\n            if (err != null) {\n              return form.emit('error', err);\n            } else {\n              return form.emit('s3-upload-completed', null, s3res);\n            }\n          });\n        }\n      };\n      return form.parse(req);\n    };\n    return {\n      handleFileUpload: handleFileUpload\n    };\n  };\n\n}).call(this);\n"]],"start1":0,"start2":0,"length1":0,"length2":2099}]],"length":2099}
